from random import randint
"""Создание множества
Задача: Дан список с повторяющимися элементами. Преобразуйте его в множество и выведите, чтобы убедиться, что элементы уникальны.
"""
lst_0 = [randint(-10, 10) for i in range(20)]
st_0 = set(lst_0)

print(lst_0,st_0)
"""Объединение и пересечение множеств
Задача: Даны два множества. Найдите их объединение и пересечение, используя операторы или соответствующие методы.
"""
st_1 =set( [randint(-10, 10) for i in range(20)])
st_01_intesec =st_0&st_1 
st_01_union = st_0|st_1 
"""Разность множеств
Задача: Даны два множества. Найдите разность: элементы, присутствующие в первом, но отсутствующие во втором.
"""

st_0_dif = st_0-st_1

"""Симметрическая разность множеств
Задача: Даны два множества. Определите симметрическую разность (элементы, которые принадлежат только одному из множеств).
"""
st_0_sum_dif = st_1^st_0
"""Проверка на подмножество
Задача: Проверьте, является ли одно множество подмножеством другого, используя оператор <= или метод issubset().
"""
st_0_insub = st_1>=st_0
"""Добавление и удаление элементов
Задача: Создайте множество, затем добавьте в него несколько элементов (метод add() или update()) и удалите один или несколько элементов (метод remove() или discard()).
"""
st_2 = set( [randint(-10, 10) for i in range(5)])
st_2.add(54)
st_2.remove(54)
print(st_2)

"""Итерация по множеству
Задача: Создайте множество и переберите его элементы в цикле, выводя каждый элемент на экран.
"""
for value in st_0:
    print(value)
"""Обновление множества
Задача: Дан список, содержащий повторяющиеся элементы. Обновите множество, добавив в него элементы из списка с помощью метода update(), и выведите итоговое множество.
"""
st_3 = set( [randint(0, 10) for i in range(20)])
lst_3 = [randint(-10, 0) for i in range(20)]
st_3.update(lst_3)
"""Удаление дубликатов с сохранением порядка
Задача: Дан список с повторяющимися элементами. Сохраните уникальные элементы в новом списке, сохранив исходный порядок. (Подсказка: можно использовать вспомогательную структуру, например, OrderedDict из модуля collections или реализовать алгоритм обхода.)
"""
lst_4 = [randint(-10, 10) for i in range(20)]
lst_4_no_dubles = [number for number in lst_4  if (lst_4.count(number)==1)]
"""Фильтрация по условию с использованием множества
Задача: Даны два множества чисел. Найдите все элементы из их объединения, которые удовлетворяют условию (например, делятся на 3).
"""
st_4 = set(lst_4)
st_5 = {number for number in st_4|st_3 if number % 3 == 0 }