from random import randint
"""Основные операции со словарём
Задача: Создайте словарь с тремя парами «ключ–значение». Добавьте новую пару, измените значение одного из ключей и удалите одну пару. Выведите итоговый словарь.
"""
dct_0 = {"Key "+ str(a): randint(-10, 10) for a in range(1,4)}

dct_0["Key 4"] = 58
dct_0["Key 3"] = 80
del dct_0["Key 2"]

print(dct_0)
"""Объединение двух словарей
Задача: Даны два словаря. Объедините их так, чтобы в случае совпадения ключей значение из второго словаря перезаписывалось в первом.
"""
dct_1 = {"Key "+ str(a): randint(-10, 10) for a in range(1,8)}
dct_2 = {"Key "+ str(a): randint(-10, 10) for a in range(1,8,2)}

for key in dct_2:
    if dct_1.get(key,0) != 0:
        dct_1[key] =  dct_2[key]

"""Перебор элементов словаря
Задача: Создайте словарь и с помощью цикла for выведите все пары ключ–значение в формате ключ: значение.
"""
for k in dct_1:
    print(f"{k} - {dct_1[k]}")
    
"""Поиск по ключу
Задача: Дан словарь, где ключ — имя, а значение — возраст. По введённому имени пользователя выведите соответствующий возраст. Если имя отсутствует, выведите сообщение об этом.
"""
names = ["Vova","Masha","Nina","Roma","Lola"]
ages = [randint(0, 50) for a in range(1,len(names))]
dct_3 = dict(zip(names,ages))
key = "Vova"
if dct_3.get(key,0) != 0:
    print(f"Возраст {key} - {dct_3[key]} лет")
else:
    print("Имя пользователя не найдено")

"""Инвертирование словаря
Задача: Дан словарь, в котором все значения уникальны. Создайте новый словарь, в котором ключи и значения поменяны местами.
"""
dct_4 = {dct_1[k]:k for k in dct_1}

"""Частотный анализ символов
Задача: Напишите программу, которая принимает строку и создаёт словарь, где ключ — символ, а значение — количество его вхождений (игнорируя пробелы).
"""
word = "AABCBBCAACBCABBABABBACCACBCBBBCA"
word_set = set(word)
word_count = [word.count(number) for number in word_set]
dct_5 = dict(zip(word_set,word_count))

"""Фильтрация студентов по оценкам
Задача: Дан словарь, где ключ — имя студента, а значение — его оценка. Выведите имена студентов, у которых оценка выше заданного порога.
"""
studs = ["Vova","Masha","Nina","Roma","Lola"]
marks = [randint(0, 100) for a in range(1,len(names))]
dct_6 = dict(zip(studs,marks ))

for k in dct_6:
    if dct_6[k]>=70:
        print(f"{k} - passed")
"""Сортировка словаря по ключу
Задача: Дан словарь. Отсортируйте его по ключам и выведите отсортированные пары (можно получить список кортежей с помощью функции sorted()).
"""
dct_7 = dct_4
for key in sorted(dct_7.keys()):
    print(f"{key} - {dct_7[key]}")
"""Сортировка словаря по значению
Задача: Дан словарь. Отсортируйте его по значениям и выведите результат в виде списка пар «ключ–значение».
"""
dct_8 = {"Key "+ str(a): randint(-10, 10) for a in range(1,8)}
for key, value in sorted(dct_8.items(), key=lambda item: item[1]):
    print(f"{key} - {value}")
"""Работа с вложенными словарями
Задача: Создайте словарь, где ключ — имя студента, а значение — другой словарь с оценками по предметам (например, {"математика": 90, "физика": 85}). Для каждого студента вычислите среднюю оценку и выведите имя и средний балл.
"""

subs = ["math","phys","litr","chem"]
dct_10 ={names:{sub:randint(0, 100) for sub in subs} for names in studs}

for name in dct_10:
    score = sum(dct_10[name].values())/len(dct_10[name].values())
    print(f"{name}'s  midle score - {score}")