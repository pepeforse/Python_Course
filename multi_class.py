"""Анализ оценок студентов
Задача: Даны данные о студентах в виде списка кортежей: (имя, предмет, оценка).
— Постройте словарь, где ключ — имя студента, а значение — список его оценок.
— Вычислите средний балл для каждого студента и выведите имена тех, у кого средний балл выше заданного порога.
"""
lst_0 = [("имя", "предмет", 4),("имя1", "предмет", 4),("имя", "предмет", 5),("имя1", "предмет", 4)]
names =[]
scores = []
for elem in lst_0:
    names.append(elem[0])
    scores.append([elem[0], elem[2]])
names = set(names)
dct_0 = {}
for name in names:
    dct_0[name] =  [score[1] for score in scores if score[0] == name ]
    
for key in dct_0:
    if sum(dct_0[key])/len(dct_0[key])>=3:
        print(key)

"""Обработка данных о продажах
Задача: Даны данные о продажах в виде списка словарей, где каждый словарь содержит: "товар", "цена", "количество".
— Создайте множество уникальных товаров.
— Сформируйте новый словарь, где ключ — название товара, а значение — суммарная выручка (цена × количество).
"""

lst_1 = [{"товар":"jsdhf","цена":4,"количество":7},{"товар":"jsdhfsaf","цена":3,"количество":5},{"товар":"jsdhf","цена":10,"количество":5},{"товар":"jsdfsdhfasd","цена":4,"количество":5},]
prod = set([])
money  = []
for elem in lst_1:
    prod.add(elem["товар"])
    money.append([elem["товар"],elem["цена"]*elem["количество"]])
dct_1={}
for name in prod:    
    dct_1[name] = sum( [money[1] for money in money if money[0] == name ])

"""Анализ посещений сайта
Задача: Даны данные о посещениях сайта в виде списка кортежей: (ip-адрес, дата посещения, время посещения).
— Постройте словарь, где ключ — ip-адрес, а значение — множество дат посещений.
— Определите IP-адреса, посетившие сайт более чем в 3 разных дня.
"""

"""Система управления контактами
Задача: Реализуйте систему контактов, где контакты хранятся в виде словаря, где ключ — имя, а значение — кортеж с данными (номер телефона, email).
— Добавьте несколько контактов, реализуйте поиск по имени и возможность удаления контакта.
"""
book = {"иван": 78148318}

book_op =0

while book_op !="1":
    
    print("действия с книгой  - 1 посмотерть")
    book_op = input()
    
stop = 0 
find = 0
while stop !=1:
    while find != 1:
        
        print("Ведите имя -")
        name = str(input()).lower()
        print(f"по запросу {name} был найден номер - {book[name]}")
        print("удалить - 1, вернуться к поиску - 9, завершить работу - 0 " )
        next_step = input()
        if next_step =="1":
            book.pop(name)
        elif next_step =="9":
            next
        elif next_step =="0":
            stop =1
            break
    

    
    


"""Инвентарь магазина
Задача: Даны данные о товарах в виде списка словарей с полями: "название", "категория", "количество".
— Создайте словарь, группирующий товары по категориям (ключ — категория, значение — список названий).
— Для каждой категории вычислите общее количество товаров и выведите те, где суммарное количество превышает заданное значение.
"""

"""Анализ текста
Задача: Введите текст от пользователя.
— Разбейте его на слова и сохраните их в список.
— Преобразуйте список в множество, чтобы получить уникальные слова.
— Создайте словарь, где для каждого уникального слова подсчитайте число его вхождений, и выведите слова, встречающиеся более одного раза.
"""

"""Календарь событий
Задача: Даны события в виде списка кортежей: (дата в формате "ДД-ММ-ГГГГ", событие).
— Сгруппируйте события в словарь, где ключ — дата, а значение — список событий в этот день.
— По запросу пользователя выведите события для указанной даты.
"""

"""Объединение данных из разных источников
Задача: Даны два списка словарей. Первый список содержит данные об учениках (например, {"id": число, "имя": строка}), второй — данные об их оценках (например, {"id": число, "оценка": число}).
— Объедините информацию, сформировав словарь, где ключ — id ученика, а значение — кортеж: (имя, список оценок).
— Выведите данные для каждого ученика.
"""

"""Управление задачами в команде
Задача: Имеется список задач в виде словарей с полями: "задача", "исполнитель", "приоритет".
— Создайте словарь, где ключ — имя исполнителя, а значение — список его задач.
— Отсортируйте список задач для каждого исполнителя по убыванию приоритета и выведите результат.
"""

"""Сравнение списков пользователей
Задача: Даны два списка пользователей (имена).
— Преобразуйте их в множества и найдите:
"""

"""Общих пользователей.
Пользователей, присутствующих только в первом списке.
Пользователей, присутствующих только во втором списке.
— Выведите результаты в виде словаря с ключами "общие", "только в первом", "только во втором".
"""